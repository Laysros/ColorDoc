1
00:00:00,000 --> 00:00:03,260
Let's take a look at the Set-based Operator Union.

2
00:00:03,260 --> 00:00:04,770
So, here's an example.

3
00:00:04,770 --> 00:00:11,285
Find all cities that are a current city or a hometown for some regular user.

4
00:00:11,285 --> 00:00:13,020
Because of the "or",

5
00:00:13,020 --> 00:00:15,415
we clearly have a union involved here.

6
00:00:15,415 --> 00:00:17,355
So, drawing a Venn diagram,

7
00:00:17,355 --> 00:00:19,155
it will look as follows.

8
00:00:19,155 --> 00:00:23,625
So, think about this as the current city and this as hometown,

9
00:00:23,625 --> 00:00:25,410
and because it says "or",

10
00:00:25,410 --> 00:00:32,940
we are looking for all the tools that satisfy either one or both of those conditions.

11
00:00:32,940 --> 00:00:35,600
Now, let's see how that's written in Algebra.

12
00:00:35,600 --> 00:00:37,440
It's going to take regular user,

13
00:00:37,440 --> 00:00:39,095
project on current city,

14
00:00:39,095 --> 00:00:40,670
going to take regular user,

15
00:00:40,670 --> 00:00:42,420
project on hometown and then,

16
00:00:42,420 --> 00:00:44,090
we're going to do with the union of them.

17
00:00:44,090 --> 00:00:46,315
One side common, that's important.

18
00:00:46,315 --> 00:00:49,010
In union, in set intersection,

19
00:00:49,010 --> 00:00:54,755
in set difference, the two operands of the operator must be type compatible.

20
00:00:54,755 --> 00:00:59,580
Type compatibility is a very simple definition in relation to databases.

21
00:00:59,580 --> 00:01:02,610
Basically, what it says is that the number of

22
00:01:02,610 --> 00:01:06,770
attributes of the two operands must be the same.

23
00:01:06,770 --> 00:01:08,970
Here, we see there's one attribute here,

24
00:01:08,970 --> 00:01:10,265
there's one attribute here,

25
00:01:10,265 --> 00:01:14,645
and the second condition is that the types must be compatible,

26
00:01:14,645 --> 00:01:16,890
and if you look back a bit,

27
00:01:16,890 --> 00:01:18,300
you'll see in our examples,

28
00:01:18,300 --> 00:01:22,765
we have defined current city and hometown as 50.

29
00:01:22,765 --> 00:01:24,330
So, they are compatible.

30
00:01:24,330 --> 00:01:26,550
So, back to look at the Union example.

31
00:01:26,550 --> 00:01:29,620
So, the query could be evaluated as follows:

32
00:01:29,620 --> 00:01:33,495
current city is computed from regular user that San Francisco,

33
00:01:33,495 --> 00:01:36,620
Las Vegas, Dallas, and College Park in the result.

34
00:01:36,620 --> 00:01:40,680
Similarly, if we project on hometown from regular user,

35
00:01:40,680 --> 00:01:43,530
we get Atlanta, Dallas, and Austin.

36
00:01:43,530 --> 00:01:47,965
Remember, Atlanta is not repeated because the result is a set.

37
00:01:47,965 --> 00:01:54,525
So, those two results now union together gives you this result set here.

38
00:01:54,525 --> 00:01:57,075
So, San Francisco is in there.

39
00:01:57,075 --> 00:02:00,100
Las Vegas is, Dallas is,

40
00:02:00,100 --> 00:02:04,395
and College Park is and then Atlanta but only once.

41
00:02:04,395 --> 00:02:07,825
Dallas is not repeated again because we already have that,

42
00:02:07,825 --> 00:02:10,440
and finally comes Austin.

