1
00:00:00,000 --> 00:00:03,420
Sometimes, you would like to group the data that comes back from

2
00:00:03,420 --> 00:00:07,810
a query in groups and then apply some simple calculations within each group.

3
00:00:07,810 --> 00:00:09,140
Let's look an example.

4
00:00:09,140 --> 00:00:12,290
Let's say one of group user interests on email.

5
00:00:12,290 --> 00:00:15,580
Then let's say, that for each one of those groups,

6
00:00:15,580 --> 00:00:17,845
we want to return the corresponding email,

7
00:00:17,845 --> 00:00:21,340
the number of interest that user has together with

8
00:00:21,340 --> 00:00:25,395
the average SinceAge of those interests for that user.

9
00:00:25,395 --> 00:00:29,595
And then, maybe you want to sort of result by ascending number of interests.

10
00:00:29,595 --> 00:00:31,705
That query is expressed as follows.

11
00:00:31,705 --> 00:00:34,735
We want to select email and count(*).

12
00:00:34,735 --> 00:00:39,535
We want to return that count in our column which we give the name,

13
00:00:39,535 --> 00:00:42,580
NumInt for number of interests and,

14
00:00:42,580 --> 00:00:48,290
we want to return the average SinceAge in a column that we like to name average age.

15
00:00:48,290 --> 00:00:51,630
So, the result table will have an email attribute.

16
00:00:51,630 --> 00:00:55,200
It will have an attribute NumInt that contains the count,

17
00:00:55,200 --> 00:01:00,400
and it will have an average age attribute that returns the average age.

18
00:01:00,400 --> 00:01:03,235
So, let us then look at the result of the query.

19
00:01:03,235 --> 00:01:07,480
So, the group or user1s has three interests in it.

20
00:01:07,480 --> 00:01:12,190
So user1, three interests and then 10 plus five plus

21
00:01:12,190 --> 00:01:17,200
14 divided by three gives you the average SinceAge for that user.

22
00:01:17,200 --> 00:01:19,320
Number two, there's one, two,

23
00:01:19,320 --> 00:01:21,810
three, four, five in the group.

24
00:01:21,810 --> 00:01:28,000
So, user2 has five interests and if you add the SinceAge up divided by five,

25
00:01:28,000 --> 00:01:29,770
that's the average age you get.

26
00:01:29,770 --> 00:01:35,110
Find user4 has a single interest and therefore of course the average age is 18.

27
00:01:35,110 --> 00:01:38,559
The order they come in is because we insisted

28
00:01:38,559 --> 00:01:42,295
that we sort the result on ascending number of interests.

29
00:01:42,295 --> 00:01:43,710
So that's what you see here,

30
00:01:43,710 --> 00:01:45,835
ascending number of interests and that's

31
00:01:45,835 --> 00:01:48,985
indicated here as you have seen before with the Order clause,

32
00:01:48,985 --> 00:01:51,695
Order By NumInt ascending.

33
00:01:51,695 --> 00:01:53,265
In the next example,

34
00:01:53,265 --> 00:01:56,140
you will see that it's actually possible to put

35
00:01:56,140 --> 00:02:00,770
conditions on the groups that you return data from.

